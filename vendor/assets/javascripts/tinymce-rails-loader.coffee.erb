class TinyMCELoader
  @_available_locales = <%= TinyMCE.available_locales.to_json %>
  @_config = <%= TinyMCE.styles.to_json %>

  constructor: ->

  setConfig: (config) ->
    TinyMCELoader._config = config

  init: (id) ->
    @remove(id)
    @_initTinyMCE(document.getElementById(id));

  remove: (id) ->
    editor.remove() if (editor = tinymce.get(id))?

  _initTinyMCE: (el, idx) ->
    type = $(el).data('tinymce') ? 'default'
    type = 'default' unless TinyMCELoader._config[type]?
    options = $.extend {}, TinyMCELoader._config[type], { language: @lang() }

    $(el).tinymce(options)

  lang: ->
    unless @_lang?
      @_lang = $('html').attr('lang')
      @_lang ?= 'en'
      _exists = false
      for locale in TinyMCELoader._available_locales
        _exists = true if @_lang == locale
      @_lang = 'en' unless _exists
    @_lang

window.tinyMCELoader = new TinyMCELoader()
